Vagrant.configure("2") do |config|
    # Configure the box to use
    config.vm.box       = 'bento/ubuntu-16.04'
    # We explicitly set the box version as we've encountered bugs in at least
    # one older version (2.3.0). A fixed version should ensure a deterministic
    # developer experience.
    config.vm.box_version = '2.3.1'

    # Configure shared folders
    # uncomment either one of the two versions below. See README.md in the
    # top-level folder for details.
    # WITH NFS
    config.vm.synced_folder ".",  "/vagrant", id: "vagrant-root",type: 'nfs', map_uid: Process.uid, map_gid: Process.gid
    config.vm.synced_folder "..", "/var/www/lc", id: "application", type: 'nfs', map_uid: Process.uid, map_gid: Process.gid

    # WITHOUT NFS
    #config.vm.synced_folder ".",  "/vagrant", id: "vagrant-root"
    #config.vm.synced_folder "..", "/var/www/lc", id: "application"

    # Configure networking (requires hostmanager plugin)
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
    config.hostmanager.ignore_private_ip = false
    config.hostmanager.include_offline = true
    config.vm.define 'librecores' do |node|
        node.vm.hostname = 'librecores.devel'
        node.vm.network :private_network, ip: '192.168.33.10'
        node.hostmanager.aliases = %w(www.librecores.devel blog.librecores.devel pma.librecores.devel)
    end

    # Configure VirtualBox environment
    config.vm.provider :virtualbox do |v|
        v.cpus = 2
        v.memory = 1024

        # Work around network interface not coming up with the bento boxes
        # >= 2.3.0 and older VirtualBox versions < 5.1.6/5.0.28. A problematic
        # version is also part of Ubuntu 16.04 currently.
        #
        # See https://www.virtualbox.org/ticket/15705 and
        # https://github.com/chef/bento/issues/688 for details.
        v.customize ['modifyvm', :id, '--cableconnected1', 'on']
    end

    # Create swap file and mount it.
    # Large amounts of memory are needed e.g. for composer update
    config.vm.provision "shell", path: "create_swapfile.sh"

    # Provision the box
    config.vm.provision :ansible do |ansible|
        #ansible.verbose = "v"
        ansible.extra_vars = { ansible_ssh_user: 'vagrant' }
        ansible.playbook = "../ansible/dev-vagrant.yml"
    end
end

private_vagrantfile = File.expand_path('./Vagrantfile.private', __dir__)
load private_vagrantfile if File.exists?(private_vagrantfile)
