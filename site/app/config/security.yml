security:
    encoders:
        # Passwords are hashed using bcrypt
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            # Allow login with username or email address
            id: fos_user.user_provider.username_email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt|error)|css|images|js)/
            security: false
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: security.csrf.token_manager
                login_path: /user/login
                check_path: /user/login_check
            oauth:
                resource_owners:
                    github: "/user/connect/check-github"
                    google: "/user/connect/check-google"
                login_path: /user/login
                failure_path: /user/login

                oauth_user_provider:
                    service: librecores_user_provider

            logout:
                path: /user/logout
                # After logout, the user is redirected to this path.
                target: /
            anonymous:    true

        login:
            pattern:  ^/user/login$
            security: false

            remember_me:
                key: "%secret%"
                lifetime: 31536000 # 365 days in seconds
                path: /
                domain: ~ # Defaults to the current domain from $_SERVER

    access_control:
        - { path: ^/user/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/connect$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/project/new$, role: ROLE_USER }
        - { path: ^/org/new$, role: ROLE_USER }
        - { path: ^/p/[^/]+/settings, role: ROLE_USER }
