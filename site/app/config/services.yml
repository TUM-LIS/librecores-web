imports:
    - { resource: legacy_aliases.yml }

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $updateProjectInfoProducer: '@old_sound_rabbit_mq.update_project_info_producer'

    # makes classes in src/Librecores/ProjectRepoBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../../src/*'
        exclude: '../../src//{Entity, DataFixtures}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../../src/Controller'
        tags: ['controller.service_arguments']

    # Conflict resolution for auto-wired interface types
    FOS\UserBundle\Mailer\MailerInterface: '@fos_user.mailer'

    # Required legacy-style aliases
    update_project_info_consumer: '@App\Consumer\UpdateProjectInformation'
    update_github_metadata_consumer: '@App\Consumer\UpdateGitHubMetadataConsumer'
    web_notification_consumer: '@App\Consumer\WebNotificationConsumer'
    email_notification_consumer: '@App\Consumer\EmailNotificationConsumer'

    # Explicit configurations
    # TODO: Investigate and deprecate these in favor of auto-wiring

    # Twig date extension - http://twig-extensions.readthedocs.io/en/latest/date.html
    Twig\Extensions\DateExtension:
        autowire: false
        # Autowire inject a TranslatorInterface into the constructor of the extension. If that happens, the extension
        # thinks it can be translated -- but we don't have any translations available, therefore the autowire is set to
        # false

    App\Util\MarkupToHtmlConverter:
        arguments:
            - '@logger'
            - '@exercise_html_purifier.default'

    App\Util\ProcessCreator: ~

    # Forms
    App\Form\Extension\ButtonTypeIconExtension:
        tags:
            - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\ButtonType }

    App\Form\Type\PurifiedTextareaType:
        arguments:
            - '@Exercise\HTMLPurifierBundle\Form\HTMLPurifierTransformer'
        tags:
            - { name: form.type, alias: purified_textarea }

    Exercise\HTMLPurifierBundle\Form\HTMLPurifierTransformer:
        arguments:
            - '@exercise_html_purifier.default'

    App\EventListener\OAuthRegistrationListener:
        arguments:
            $userManager: '@fos_user.user_manager'

    # User/auth management
    App\Security\UserManager:
        public: true
        arguments:
            - '@fos_user.util.password_updater'
            - '@fos_user.util.canonical_fields_updater'
            - '@fos_user.object_manager'
            - '%fos_user.model.user.class%'

    App\Security\Core\User\LibreCoresUserProvider:
        arguments:
            - '@fos_user.user_manager'
            - '@validator'
            - '@session'

    # Security
    App\Security\ProjectVoter:
        tags:
            - { name: security.voter }
        public: false

    # Automatically inject all configured repo crawlers
    # https://symfony.com/doc/current/service_container/tags.html#reference-tagged-services
    App\RepoCrawler\RepoCrawlerRegistry:
        arguments:
            $repoCrawlers: !tagged app.repo_crawler

    App\RepoCrawler\GitRepoCrawler:
        tags:
            - 'app.repo_crawler'
