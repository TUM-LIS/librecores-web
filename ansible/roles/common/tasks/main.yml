---
# Common plays to be run on all nodes.

- name: check if we are running in the development environment
  stat:
    path: /vagrant
  register: vagrant_dir

- set_fact: is_vagrant_environment={{ vagrant_dir.stat.exists }}

- name: Get home directory of web user
  shell: >
    egrep "^{{ web_user }}:" /etc/passwd | awk -F: '{ print $6 }'
  changed_when: false
  register: web_user_home_raw

- set_fact: web_user_home="{{ web_user_home_raw.stdout }}"

- name: Set unattended upgrade configuration
  copy:
    src: 50unattended-upgrades
    dest: /etc/apt/apt.conf.d/50unattended-upgrades

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install ntp
  apt:
    pkg: ntp
    state: present
  tags: ntp

- name: Configure ntp file
  template:
    src: ntp.conf
    dest: /etc/ntp.conf
  tags: ntp
  notify: restart ntp

- name: Start the ntp service
  service:
    name: ntp
    state: started
    enabled: yes
  tags: ntp

- name: Install common system packages
  become: true
  apt:
    pkg:
      - curl
      - wget
      - git
      - unzip
      # required for ansible
      - python3-mysqldb
    state: present

# the data partition is on EBS in production/staging
- name: Ensure data directory exists
  file:
    path: /data
    state: directory

# get source code (on non-development machines only)
- name: Send deployment SSH key to remote machine (non-development only)
  copy:
    dest: /src-librecores-web.key
    content: "{{ src_deployment_key }}"
    mode: 0400
  when: not is_vagrant_environment

- name: "Setup source repository (non-development only)"
  become: true
  become_user: web-deploy
  git:
    repo: "{{ src_repo_url }}"
    dest: /var/www/lc
    accept_hostkey: yes
    depth: "1"
    version: "{{ src_version }}"
    key_file: /src-librecores-web.key
  when: not is_vagrant_environment

- name: "Delete deployment key again (non-development only)"
  file:
    path: /src-librecores-web.key
    state: absent
  when: not is_vagrant_environment
